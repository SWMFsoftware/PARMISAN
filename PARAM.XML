<!-- The syntax is described by share/Scripts/CheckParam.pl and the manual -->

<commandList name="MFLAMPA: SP Component">
<set name="NameComp"          type="string" value="$SP"/>
<set name="NameRestartOutDir" type="string" value="$NameComp/restartOUT"/>
<set name="NamePlotDir"       type="string" value="$NameComp/IO2"/>

List of commands used in the PARAM.in file for MFLAMPA configured as the SP 
component of the SWMF.

<commandgroup name="DOMAIN">

<command name="ORIGIN">
  <parameter name="ROrigin" type="real" min="1.0" default="2.5"/>
  <parameter name="LonMin"  type="real" min="-359.0" max="359.0" default="0.0"/>
  <parameter name="LatMin"  type="real" min="-90.0" max="89.0" default="-70.0"/>
  <parameter name="LonMax"  type="real" min="1.0" max="360" default="360.0"/>
  <parameter name="LatMax"  type="real" min="-89.0" max="90.0" default="70.0"/>

#ORIGIN
2.5             ROrigin [Rs]
0.0             LonMin [deg]
-70.0           LatMin [deg]
360.0           LonMax [deg]
70.0            LatMax [deg]

Origin points on the surface R=ROrigin in the intervals of longitude,
(LonMin,LonMax) and latitude, (LatMin,LatMax). Originating from these
points are the magnetic field lines traced down from ROrigin to RScMin
and up from ROrigin to RIhMax. 
</command>
</commandgroup>

<commandgroup name="UNIT">

<command name="PARTICLEENERGYUNIT">
  <parameter name="ParticleEnergyUnit" type="string" default="keV"/>

#PARTICLEENERGYUNIT
keV             ParticleEnergyUnit

The particle energy unit: for example, keV, MeV, GeV, etc.
We use keV as the default value.
</command>
</commandgroup>

<commandgroup name="STAND ALONE MODE">
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!! STAND ALONE PARAMETERS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


<command name="STARTTIME">
  <parameter name="iYear"   type="integer" default="2000" />
  <parameter name="iMonth"  type="integer" min="1" max="12" default="3"/>
  <parameter name="iDay"    type="integer" min="1" max="31" default="21"/>
  <parameter name="iHour"   type="integer" min="0" max="23" default="10"/>
  <parameter name="iMinute" type="integer" min="0" max="59" default="45"/>
  <parameter name="iSecond" type="integer" min="0" max="59" default="0"/>

#STARTTIME
2000			iYear
   3			iMonth
  22			iDay
  10			iHour
  45			iMinute
   0			iSecond

This command can only be used in the first session.

The #STARTTIME command sets the date and time in Greenwich Mean Time
(GMT) or Universal Time (UT) when the simulation starts.

There is no default value.
</command>

<command name="TIMEACCURATE" if="$_IsStandAlone">
  <parameter name="IsTimeAccurate" type="logical" default="T" />

#TIMEACCURATE
T			IsTimeAccurate

Allows solving steady-state distribution (cosmic rays, seed population)
by setting DoTimeAccurate to .false.
</command>

<command name="TIMESIMULATION" if="$_IsFirstSession" multiple="T">
  <parameter name="SPTime" type="real" min="0.0" default="0.0" />

#TIMESIMULATION
1			SPTime [sec]

The SPTime variable contains the simulation time in seconds
relative to the initial time set by the #STARTTIME command.
The #TIMESIMULATION command and SPTime are saved into the restart
header file, so the simulation can be continued from the same time. 
This value can be overwritten by a subsequent #TIMESIMULATION command 
if necessary.

In SWMF the MFLAMPA time is checked against the global SWMF simulation time.

The default value is SPTime=0.
</command>

<command name="NSTEP" if="$_IsFirstSession" multiple="T">
  <parameter name="nStep" type="integer" min="0" default="0" />

#NSTEP
100			nStep

Set nStep for the component. Typically used in the restart.H header file.
Generally it is not inserted in a PARAM.in file by the user, except
when the number of steps are reset for extremely long runs, such as
the operational run at NOAA SWPC, to avoid integer overflow.

The default is nStep=0 as the starting time step with no restart.
</command>

<command name="BEGIN_COMP" multiple="T" if="$_IsStandAlone">

This command is allowed in stand alone mode only for the sake of the 
test suite, which contains these commands when the framework is tested.
</command>

<command name="END_COMP" multiple="T" if="$_IsStandAlone">

This command is allowed in stand alone mode only for the sake of the 
test suite, which contains these commands when the framework is tested.
</command>

<command name="SAVERESTART" if="$_IsStandAlone">
  <parameter name="DoSaveRestart" type="logical" default="F" />
  <parameter name="DnSaveRestart" type="integer" default="-1" />
  <parameter name="DtSaveRestart" type="real" default="-1.0" />

#SAVERESTART
F			DoSaveRestart
-1			DnSaveRestart
-1.0		DtSaveRestart

Determine whether and when to save the restart file (STAND ALONE ONLY)
Set default value as: False, -1, and -1.0
</command>

<command name="RUN" if="$_IsStandAlone">

#RUN

This command is only used in stand alone mode.

The #RUN command does not have any parameters. It signals the end
of the current session, and makes MFLAMPA execute the session with
the current set of parameters. The parameters for the next session
start after the #RUN command. For the last session there is no
need to use the #RUN command, since the #END command or simply
the end of the PARAM.in file makes MFLAMPA execute the last session.
</command>

<command name="END">

#END

The #END command signals the end of the included file or the
end of the PARAM.in file. Lines following the #END command are
ignored. It is not required to use the #END command. The end
of the included file or PARAM.in file is equivalent with an 
#END command in the last line.
</command>

</commandgroup>

<commandgroup name="STOPPING CRITERIA">
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!! STOPPING CRITERIA !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

The commands in this group only work in stand alone mode.

<command name="STOP" if="$_IsStandAlone">
  <parameter name="nIterMax" type="integer" min="-1" default="-1" />
  <parameter name="TimeMax" type="real"  min="-1.0" default="-1.0" />

#STOP
-1			nIterMax
600.0		TimeMax [sec]

This command is only used in stand alone mode.

The nIterMax variable contains the
maximum number of iterations {\it since the beginning of the current run}
(in case of a restart, the time steps done before the restart do not count).
If nIteration reaches this value the session is finished.
The TimeMax variable contains the maximum simulation time
relative to the initial time determined by the #STARTTIME command.
If tSimulation reaches this value the session is finished.

Using a negative value for either variables means that the
corresponding condition is  not checked. 

The #STOP command must be used in every session.
</command>

<command name="CHECKSTOPFILE" if="$_IsStandAlone">
  <parameter name="DoCheckStopFile" type="logical" default="T" />

#CHECKSTOPFILE
T			DoCheckStopFile

This command is only used in stand alone mode.

If DoCheckStopFile is true then the code checks if the
MFLAMPA.STOP file exists in the run directory. This file is deleted at
the beginning of the run, so the user must explicitly create the file
with e.g. the "touch MFLAMPA.STOP" UNIX command.
If the file is found in the run directory,
the execution stops in a graceful manner.
Restart files and plot files are saved as required by the
appropriate parameters.

The default is DoCheckStopFile=.true.
</command>

<command name="ECHO" if="$_IsStandAlone">
  <parameter name="DoEcho" type="logical" default="T" />

#ECHO
T			DoEcho

This command is only used in stand alone mode.

If DoEcho is true then the code set the parameters to be echoed

The default is DoEcho=.false.
</command>


<command name="CPUTIMEMAX" if="$_IsStandAlone">
  <parameter name="CpuTimeMax" type="real" min="-1.0" default="-1.0" />

#CPUTIMEMAX
3600        CpuTimeMax [sec]

This command is only used in stand alone mode.

The CpuTimeMax variable contains the maximum allowed CPU time (wall clock
time) for the execution of the current run. If the CPU time reaches
this time, the execution stops in a graceful manner.
Restart files and plot files are saved as required by the
appropriate parameters.
This command is very useful when the code is submitted to a batch
queue with a limited wall clock time.

The default value is -1.0, which means that the CPU time is not checked.
To do the check the CpuTimeMax variable has to be set to a positive value.
</command>
</commandgroup>


<commandgroup name="GRID">
Parameters of the Lagrangian grid used in MFLAMPA 
<command name="CHECKGRIDSIZE">
  <parameter name="nVertexMax" type="integer" min="1" default="2000" />
  <parameter name="nLon"  type="integer" min="1" default="20" />
  <parameter name="nLat"  type="integer" min="1" default="20" />

#CHECKGRIDSIZE
1000     	nParticleMax
4     		nLon
4     		nLat

Check if the configured parameters of the Lagrangian grid match those
assumed in the input files
</command>

<command name="GRIDNODE">
  <parameter name="nLon"  type="integer" min="1" default="20" />
  <parameter name="nLat"  type="integer" min="1" default="20" />

#GRIDNODE
4     		nLon
4     		nLat

Set the configured parameters of the Lagrangian grid
</command>

<command name="TESTPOS">
  <parameter name="iNodeTest"  type="integer" min="0" default="1" />
  <parameter name="iParticleTest"  type="integer" min="0" default="10" />
  <parameter name="iPTest"  type="integer" min="0" default="1" />

#TESTPOS
1     		iNodeTest
99    		iParticleTest
1     		iPTest

Set the test position and momentum
</command>

<command name="SPREADGRID">
  <parameter name="nSpreadLon"  type="integer" min="1" default="3" />
  <parameter name="nSpreadLat"  type="integer" min="1" default="3" />

#PREADGRID
6  	  		nSpreadLon
6  	  		nSpreadLat

Set the size of angular grid in longitude and latitude
</command>

<command name="SPREADSIGMA">
  <parameter name="SigmaMode"  type="string" />
  <parameter name="Sigma"  type="real" min="0.0" default="10.0"/>

#SPREADGRID
const		SigmaMode
5.0	  		Sigma [deg]

Set the sigma changes to the lines:
SigmaMode is const: all line have the same characteristic spread
SigmaMode is linear-lon: sigma changes linear by lines' longitude index
SigmaMode is linear-lat: sigma changes linear by lines' latitude index
SigmaMode is bilinear: sigma changes bilinear by lon and lat indexes
Then we set the "Sigma" of the lines, namely the changes in degrees.
</command>

<command name="SPREADSOLIDANGLE">
  <parameter name="RadiusRef"  type="real" default="1.0"/>
  <parameter name="SolidAngleRef"  type="real" default="1.0"/>

#SPREADGRID
-1.0  	  	RadiusRef [Rs]
-1.0	  	Sigma [deg]

Set reference radius and value of solid angle associated with lines.
</command>

<command name="COORDSYSTEM" alias="COORDINATESYSTEM" if="$_IsFirstSession">
  <parameter name="TypeCoordSystem" type="string" input="select">
    <option name="HGR" default="T"/>
    <option name="HGI"/>
    <option name="HGC"/>
  </parameter>

#COORDSYSTEM
HGI       	TypeCoordSystem

Type of heliocentric coordinate system used in MFLAMPA (HGI, HGR, HGC).
</command>

<command name="MOMENTUMGRID" if="$_IsFirstSession">
  <parameter name="EnergyMin" type="real" min="0.0" default="1.0" />
  <parameter name="EnergyMax" type="real" min="0.0" default="1000.0" />
  <parameter name="nP" type="integer" min="1" default="100" />
  <parameter name="nMu" type="integer" min="1" default="1"/>

#MOMENTUMGRID
1.0   		EnergyMin
1000.0 		EnergyMax
100    		nP
1	 		nMu

Read energy range, the number of energy bins and the energy unit.
Usually read from the restart.H file. 
Read the pitch angle information, determine whether we take the
averaged value over all pitch angles. Also, we need to specify
how many intervals in the range of [-1, 1] for pitch angle.
</command>

<command name="FLUXINITIAL">
  <parameter name="FluxInitIo" type="real" min="0.0" default="0.01" />

#FLUXINITIAL
0.01   		FluxInitIo

Distribution is initialized to have integral flux: 
default value is set as 0.01 [pfu].
</command>

<command name="FLUXCHANNEL">
  <parameter name="nFluxChannel" type="integer" min="1" default="6" />

#FLUXCHANNEL
6			nFluxChannel

Flux channel numbers: use the one on GOES by default, 6 channels.
</command>

</commandgroup>


<commandgroup name="ENDBC">

<command name="UPPERENDBC">
  <parameter name="UseUpperEndBc" type="logical" default="F"/>
  <parameter name="TypeUpperEndBc" type="string" default="lism"/>
  <parameter name="TypeLisBc" type="string" default="default"/>
  <parameter name="UseModulationPot" type="logical" default="F"/>
  <parameter name="ModulationPot" type="real" min="1.0" default="600.0"/>

#UPPERENDBC
F           UseUpperEndBc
lism        TypeUpperEndBc
default     TypeLisBc
F           UseModulationPot
600.0       ModulationPot

To determine whether we set the upper boundary condition. If so, 
we turn UseUpperEndBc and have UpperEndSpectrum_I in diffusion.
At this time, we need to determine the type of UpperEndBc, LISM
is the nominal one for use. For LISM, there are various models
fitting or simulating the spectrum, read as TypeLisBc. Here we
set Eq.(2) in Usoskin et al. 2005 as default. Then, we also need
to determine whether we use LISM or the GCR spectrum at ~1 AU.
For the latter, we also need the modulation potential (denoted
as "phi" in Usoskin et al. 2005), which is temporal and spatial
(and even energy) dependent. We stick to the one derived by Oulu
neutron monitor and published in the "Dataset 1" of
https://cosmicrays.oulu.fi/phi/phi.html.
</command>

</commandgroup>


<commandgroup name="ADVANCE">

<command name="INJECTION">
  <parameter name="SpectralIndex" type="real" default="5.0" />
  <parameter name="Efficency" type="real" min="0.0" default="0.25" />

#INJECTION
5.0         SpectralIndex
0.25        Efficency

Set up parameters of the power-law spectrum of suprathermal
particles at sqrt(2 mp Ti) lt p lt Pinj:

F ~ Efficiency * (Spectral index - 3) / p**SpectralIndex

The injection efficiency is the ratio of suprathermal proton
density to the total proton density. Should not exceed one,
however, somewhat higher than one values may be of use.
</command>

<command name="CFL">
  <parameter name="Cfl" type="real" min="0.0" max="1.0" default="0.99" />

#CFL
0.99		Cfl

Please send an email to Igor Sokolov for more information.
</command>

<command name="POISSONBRACKET">
  <parameter name="UsePoissonBracket" type="logical" default="T" />

#POISSONBRACKET
F       	UsePoissonBracket

If UsePoissonBracket is True, the advection scheme is conservative
Poisson bracket scheme; otherwise, it is non-conservative.

The default value is false.
</command>

</commandgroup>


<commandgroup name="ACTION">

<command name="RESTART">
  <parameter name="DoRestart" type="logical" default="T" />

#RESTART
T	    	DoRestart

The default value is true.
</command>

<command name="DORUN">
  <parameter name="DoRun" type="logical" default="T" />

#DORUN
T			DoRun

If DoRun is False, only magnetic field lines are extracted, but the particle
distribution function is not solved.

The default value is true.
</command>

<command name="TRACESHOCK">
  <parameter name="DoTraceShock" type="logical" default="T" />

#TRACESHOCK
T       	DoTraceShock

If DoTraceShock is False, the shock wave is not traced and the density
profile is not sharpened around it.

The default value is true.
</command>

<command name="#USEFIXEDMFPUPSTREAM">
  <parameter name="UseFixedMeanFreePathUpstream" type="logical" default="F" />
  <parameter name="MeanFreePath0InAu" type="real" min="0.0" default="1.0" />

#USEFIXEDMFPUPSTREAM
F          UseFixedMeanFreePathUpstream
1.0        MeanFreePath0InAu

Determine whether we set the mean free path, 
see Li et al. (2003), doi:10.1029/2002JA009666.
The default value for UseFixedMeanFreePathUpstream
is set as false, and that for MeanFreePath0InAu is 1.0
</command>


<command name="DIFFUSION">
  <parameter name="UseDiffusion" type="logical" default="T" />

#DIFFUSION
T           UseDiffusion

Used for testing, to disable diffusion, if UseDiffusion is false.
The default value is true.
</command>

</commandgroup>

<commandgroup name="TURBULENCE">

<command name="#SCALETURBULENCE">
  <parameter name="ScaleTurbulenceType" type="string" default="const" />
  <parameter name="ScaleTurbulence" type="real" min="0.0" default="0.1" />

#SCALETURBULENCE
const		ScaleTurbulenceType
0.24 		ScaleTurbulence [AU] at 1 AU

cut-off wavenumber of turbulence spectrum: k0 = 2*cPi/Scale
The default value is set as const (or constant), i.e.,
the value (e.g., 0.1) of "ScaleTurbulence [AU] at 1 AU".
</command>

<command name="TURBULENTSPECTRUM">
  <parameter name="UseTurbulentSpectrum" type="logical" default="F" />

#TURBULENTSPECTRUM
F          UseTurbulentSpectrum

Determine whether we use the turbulence spectrum
Set the default value is false.
</command>


</commandgroup>

<commandgroup name="INPUT/OUTPUT">
<command name="USEDATETIME">
  <parameter name="UseDateTime" type="logical" default="F" />

#USEDATETIME
T          UseDateTime 

Set the format for the output file names like _eYYYYMMDD_HHMMSS tagging
the file with real date and UT tume instant. When unset (default) the
time tag looks like _tHHMMSS, where HHMMSS is the simulation time in hours-
minutes-seconds passed after the initial time (set by the command #STARTTIME)
</command>

<command name="TIMING">
  <parameter name="UseTiming" type="logical" default="F" />
  <parameter name="nTiming" type="integer" />
  <parameter name="nDepthTiming" type="integer" default="-1" />
  <parameter name="TypeTimingReport" type="string" />

#TIMING
T          UseTiming
-2		   nTiming
-1		   nDepthTiming
cumm	   TypeTimingReport

Set the timing format in SP component, but as default, we set
UseTiming as False; if UseTiming is True, one should specify
nTiming, nDepthTiming, and TypeTimingReport.
</command>

<command name="SAVEINITIAL">
  <parameter name="DoSaveInitial" type="logical" default="T" />

#SAVEINITIAL
T          DoSaveInitial 

As the default (DoSaveInitial=T) the MFLAMPA saves datasets (at least the
MHD information) starting from the initial state prior to the run. However,
once MFLAMPA restarts, it is useful to set DoSaveInitial to F, in order
to avoid rewriting the output files and eliminate duplicate tags in the file
tag list, becuase the same output files and tags were saved at the end of 
previous run.
</command>

<command name="READMHDATA" if="$_IsFirstSession">
  <parameter name="DoReadMhData" type="logical" default="F" />
  <parameter name="NameInputDir" type="string"/>

#READMHDATA
T              DoReadMhData
MH_data        NameInputDir

Sets the name of input directory with MHD data.
</command>

<command name="MHDATA" if="$_IsFirstSession">
  <parameter name="TypeFile" type="string" input="select">
    <option name="idl" default="T" />
    <option name="ascii" />
    <option name="tec" />
    <option name="real4" />
    <option name="real8" />
  </parameter>
  <parameter name="nFileRead" type="integer" default="0"/>
  <parameter name="NameTagFile" type="string" default=""/>

#MHDATA
idl            TypeFile
120            nFileRead
MH_data.lst    NameTagFile

Sets type, number and names of the MHD input files. While running MFLAMPA
in cinjunction with the MHD code, these parameters are usually saved into
the header file, which is then included into the MFLAMPA parameter file
</command>

<command name="NTAG">
  <parameter name="nTag" type="integer" min="0" default="0" />

#NTAG
120            nTag  

The number of different time-line tags of the MH_data files.
</command>

<command name="SAVEPLOT">
  <parameter name="nFileOut" type="integer" min="0" default="0" />
    <for name="iPlot" from="1" to="$nFileOut">
      <parameter name="StringPlot" type="strings" case="lower"
		 min="3" max="20" >
	<part name="KindData" type="string" input="select">
	  <option name="MHD, fluxes 1D"  value="mh1d" />
	  <option name="MHD 2D"  value="mh2d" />
	  <option name="Distrubution function, 1D" value="distr1d" />
	  <option name="Flux 2D"  value="flux2d" />
	  <option name="MHD, fluxes timeline" value="mhtime" />
	  <option name="Flux timeline"  value="fluxtime" />
	</part>
	<part name="TypeFile" type="string" input="select" required="T">
	  <option name="ascii" value="ascii/idl" default="T"/>
	  <option name="tec" value="tec/tcp" />
	  <option name="real4" />
	  <option name="real8" />
	</part>
	<part name="NameVar" type="string" required="T" multiple="T"
	      input="select">
	  <option name="Flux"   value="flux" default="T"/>
	  <option name="R"      value="r" />
          <option name="LagrID" value="lagrid"/>
          <option name="X"  	value="x"/>  
          <option name="Y"  	value="y"/>  
          <option name="Z"  	value="z"/>  
          <option name="Rho"	value="rho"/>
          <option name="T"  	value="t"/>  
          <option name="Ux" 	value="ux"/> 
          <option name="Uy" 	value="uy"/> 
          <option name="Uz" 	value="uz"/> 
          <option name="Bx" 	value="bx"/> 
          <option name="By" 	value="by"/> 
          <option name="Bz" 	value="bz"/> 
          <option name="Wave1"  value="wave1"/>
          <option name="Wave2"  value="wave2"/>
          <option name="R"    	value="r"/>  
          <option name="D"    	value="d"/>  
          <option name="S"    	value="s"/>  
          <option name="U"    	value="u"/>  
          <option name="B"    	value="b"/>  
          <option name="RhoOld" value="rhoold"/>
          <option name="UOld"   value="uold"/>
          <option name="BOld"   value="bold"/>
	</part>
      </parameter>
      <if expr="$KindData=~/mh2d|mhtime|flux2d|fluxtime/">
	<parameter name="Radius" type="real" />
	<if expr="$KindData eq fluxtime">
	  <parameter name="Longitude" type="real"
          min="-360.0" max="360.0" default="0.0"/>
	  <parameter name="Latitude" type="real"
          min="-90.0" max="90.0" default="0.0"/>
	</if>
      </if>
    </for>

#SAVEPLOT
3                             nFileOut
mh1d flux ascii               StringPlot
mh2d flux spread ascii        StringPlot
215.0                         Radius [Rs] (read if mh2d/mhtime/flux2d/fluxtime)
fluxtime flux ascii           StringPlot
215.0                         Radius [Rs] (read if mh2d/mhtime/flux2d/fluxtime)
30.0                          Longitude [deg] (red if fluxtime)
46.0                          Latitude [deg] (red if fluxtime)

Sets the number and type of the plotfiles to save. For several types of plot
the radius of heliocentric spherical surface on which to plot may be also set.
As an example, "mh1d" means to save 1D plot (for each magnetic field line)
including coordinates and MHD variables; "R" means radial coordinate (R) plus
fluxes; "idl" means to save the data in the idl format. In StringPlot, the
first identifier is always a type of plot, the last identifier is a type of
file, and the string variables in between denote the list of plot variables
extra to the MHD ones.

Please send an email to Igor Sokolov for more information on this command.
</command>

<command name="NOUTPUT">
  <parameter name="nOutput" type="integer" min="0" default="1" />
  
#NOUTPUT
10                 nOutput

Frequency to plot (effective for IsSteadyState only)

</command>
</commandgroup>

</commandList>
